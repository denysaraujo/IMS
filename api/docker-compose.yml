services:
  api:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: spring_api
    ports:
      - "${SERVER_PORT}:8080"
    environment:
      SPRING_APPLICATION_NAME: ${SPRING_APPLICATION_NAME}
      DEBUG: ${DEBUG}
      SPRING_DATASOURCE_URL: ${SPRING_DATASOURCE_URL}
      SPRING_DATASOURCE_USERNAME: ${SPRING_DATASOURCE_USERNAME}
      SPRING_DATASOURCE_PASSWORD: ${SPRING_DATASOURCE_PASSWORD}
      SPRING_DATASOURCE_DRIVER_CLASS_NAME: ${SPRING_DATASOURCE_DRIVER_CLASS_NAME}
      SPRING_JPA_HIBERNATE_DDL_AUTO: ${SPRING_JPA_HIBERNATE_DDL_AUTO}
      SPRING_JPA_SHOW_SQL: ${SPRING_JPA_SHOW_SQL}
      SPRING_JPA_PROPERTIES_HIBERNATE_DIALECT: ${SPRING_JPA_PROPERTIES_HIBERNATE_DIALECT}
      SERVER_PORT: ${SERVER_PORT}
    depends_on:
      - db
    networks:
      - api_network

  db:
    image: postgres:15
    container_name: postgres_db
    environment:
      POSTGRES_USER: usuarioims
      POSTGRES_PASSWORD: ims123
      POSTGRES_DB: bdims
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - api_network

volumes:
  postgres_data:

networks:
  api_network:
